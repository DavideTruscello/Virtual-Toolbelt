<UserControl x:Class="Virtual_Toolbelt.Views.HolderView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"             
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:Virtual_Toolbelt.ViewModels"
        xmlns:ut="clr-namespace:Virtual_Toolbelt.Utilities"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance vm:HolderViewModel}"
        Height="100" Width="100">
    <!--everything is encapsulated in a Label to enable mouse events-->
    <Label Padding="0">
        <!--triggers from Microsoft.Xaml.Behaviors.Wpf, InteractiveCommand is used in place of
        InvokeCommandAction when there is the need to pass parameters-->
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDoubleClick">
                <ut:InteractiveCommand Command="{Binding Path=OpenCommand}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseEnter">
                <i:InvokeCommandAction Command="{Binding Path=MouseEnterCommand}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseLeave">
                <i:InvokeCommandAction Command="{Binding Path=MouseLeaveCommand}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseRightButtonDown">
                <i:InvokeCommandAction Command="{Binding Path=MouseRightButtonDownCommand}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid>
            <!--The blue circle around the icon-->
            <Ellipse Grid.Row="5" Fill="{Binding Path=EllipseColor}" Height="100" Width="100"
                 VerticalAlignment="Top" HorizontalAlignment="Center"/>
            <!--The icon-->
            <Image  Width="{Binding Path=IconWidth}" Margin="0,20,0,0"
                HorizontalAlignment="Center" VerticalAlignment="Top"  Source="{Binding Path=Icon}"/>
            <!--The text under the icon-->
            <TextBlock Height="20" Width="100"  HorizontalAlignment="Center" VerticalAlignment="Bottom" 
                       Foreground="{Binding Path=TextColor}" FontWeight="Bold" TextAlignment="Center"  Text="{Binding Path=PathName}"/>
        </Grid>
    </Label>
</UserControl>